# Generated by Django 5.0.8 on 2024-08-25 00:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Backtest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('result_file', models.FileField(blank=True, help_text='Backtest result file stored in MinIO', null=True, upload_to='backtest_results/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Backtest',
                'verbose_name_plural': 'Backtests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('api_url', models.URLField(blank=True, help_text='URL for the data source API', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Data Source',
                'verbose_name_plural': 'Data Sources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Chart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_file', models.FileField(blank=True, help_text='Chart image stored in MinIO', null=True, upload_to='backtest_charts/')),
                ('backtest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charts', to='backtesting.backtest')),
            ],
            options={
                'verbose_name': 'Chart',
                'verbose_name_plural': 'Charts',
            },
        ),
        migrations.CreateModel(
            name='SandboxData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(help_text='Ticker symbol of the stock', max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('interval', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], default='daily', max_length=10)),
                ('overlay', models.JSONField(blank=True, help_text='Selected overlays like EMA, SMA, Bollinger Bands', null=True)),
                ('chart_data', models.JSONField(blank=True, help_text='Stored chart data in JSON format', null=True)),
                ('indicators_data', models.JSONField(blank=True, help_text='Stored indicator data in JSON format', null=True)),
                ('crossings', models.JSONField(blank=True, help_text='Stored crossings information in JSON format', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sandbox_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sandbox Data',
                'verbose_name_plural': 'Sandbox Data',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockBacktest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('sector', models.CharField(blank=True, max_length=255, null=True)),
                ('exchange', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='backtesting.datasource')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
                'ordering': ['ticker'],
            },
        ),
        migrations.AddField(
            model_name='backtest',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backtests', to='backtesting.stockbacktest'),
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(help_text='Strategy file stored in MinIO', upload_to='strategies/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Strategy',
                'verbose_name_plural': 'Strategies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='backtest',
            name='strategy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backtests', to='backtesting.strategy'),
        ),
        migrations.CreateModel(
            name='StrategyOutput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=50)),
                ('output_type', models.CharField(choices=[('chart', 'Chart'), ('raw', 'Raw Data'), ('complete', 'Complete Data')], max_length=50)),
                ('file', models.FileField(help_text='Output file stored in MinIO', upload_to='strategy_outputs/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to='backtesting.strategy')),
            ],
        ),
    ]
