services:
  django:
    build: .
    volumes:
      - .:/workspace
    depends_on:
      - redis
      - minio
      - db
      - ollama
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - app-network
    profiles:
      - web
      - all
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network
    profiles:
      - caching
      - all
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio:latest
    command: server /data
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "9002:9000"
    volumes:
      - minio_data:/data
    networks:
      - app-network
    profiles:
      - storage
      - all
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    networks:
      - app-network
    profiles:
      - database
      - all
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  celery:
    build: .
    command: celery -A simulateur worker -l info
    volumes:
      - .:/workspace
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - app-network
    profiles:
      - all
      - celery
    healthcheck:
      test: ["CMD-SHELL", "celery -A simulateur status"]
      interval: 30s
      timeout: 10s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    volumes:
      - ./ollama/ollama:/root/.ollama
      - ./entrypoint.sh:/entrypoint.sh
    container_name: ollama
    profiles:
      - all
      - ollama
    pull_policy: always
    tty: true
    restart: always
    entrypoint: [ "/usr/bin/bash", "/entrypoint.sh" ]

volumes:
  minio_data:
  postgres_data:

networks:
  app-network:
    driver: bridge