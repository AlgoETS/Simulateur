# Generated by Django 5.0.6 on 2024-06-17 22:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=100)),
                ("backstory", models.TextField(default="")),
                ("max_shares", models.IntegerField(default=1000)),
                ("price_maximum", models.FloatField(default=0.0)),
                ("initial_price", models.FloatField(default=0.0)),
                ("current_price", models.FloatField(default=0.0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("pe_ratio", models.FloatField(default=0.0)),
                ("market_cap", models.FloatField(default=0.0)),
            ],
            options={
                "verbose_name_plural": "Companies",
            },
        ),
        migrations.CreateModel(
            name="Cryptocurrency",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=100)),
                ("price", models.FloatField(default=0.0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("price_maximum", models.FloatField(default=0.0)),
                ("partial_share", models.FloatField(default=0.0)),
                ("complete_share", models.IntegerField(default=0)),
                ("open_price", models.FloatField(default=0.0)),
                ("high_price", models.FloatField(default=0.0)),
                ("low_price", models.FloatField(default=0.0)),
                ("close_price", models.FloatField(default=0.0)),
            ],
            options={
                "verbose_name_plural": "Cryptocurrencies",
            },
        ),
        migrations.CreateModel(
            name="CustomStat",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=100)),
                ("value", models.FloatField(default=0.0)),
            ],
            options={
                "verbose_name_plural": "Custom Stats",
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=100)),
                ("description", models.TextField(default="")),
                ("impact", models.FloatField(default=0.0)),
                ("event_type", models.CharField(default="", max_length=100)),
                ("trigger_date", models.DateTimeField()),
            ],
            options={
                "verbose_name_plural": "Events",
            },
        ),
        migrations.CreateModel(
            name="SimulationSettings",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("max_users", models.IntegerField(default=100)),
                ("max_companies", models.IntegerField(default=50)),
                ("timer_step", models.IntegerField(default=10)),
                (
                    "timer_step_unit",
                    models.CharField(
                        choices=[
                            ("second", "Second"),
                            ("minute", "Minute"),
                            ("day", "Day"),
                            ("month", "Month"),
                            ("year", "Year"),
                        ],
                        default="minute",
                        max_length=6,
                    ),
                ),
                ("interval", models.IntegerField(default=2)),
                (
                    "interval_unit",
                    models.CharField(
                        choices=[
                            ("second", "Second"),
                            ("minute", "Minute"),
                            ("day", "Day"),
                            ("month", "Month"),
                            ("year", "Year"),
                        ],
                        default="hours",
                        max_length=6,
                    ),
                ),
                ("max_interval", models.IntegerField(default=300)),
                ("fluctuation_rate", models.FloatField(default=0.1)),
                (
                    "time_unit",
                    models.CharField(
                        choices=[
                            ("second", "Second"),
                            ("minute", "Minute"),
                            ("day", "Day"),
                            ("month", "Month"),
                            ("year", "Year"),
                        ],
                        default="second",
                        max_length=6,
                    ),
                ),
                ("close_stock_market_at_night", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Simulation Settings",
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=100)),
                ("balance", models.FloatField(default=100000)),
                ("borrowed_money", models.FloatField(default=0.0)),
            ],
            options={
                "verbose_name_plural": "Teams",
            },
        ),
        migrations.CreateModel(
            name="Trigger",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=100)),
                ("description", models.TextField(default="")),
                ("trigger_type", models.CharField(default="", max_length=100)),
                ("trigger_value", models.FloatField(default=0.0)),
            ],
            options={
                "verbose_name_plural": "Triggers",
            },
        ),
        migrations.CreateModel(
            name="Scenario",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=100)),
                ("description", models.TextField(default="")),
                ("backstory", models.TextField(default="")),
                ("difficulty_level", models.CharField(default="", max_length=100)),
                ("duration", models.IntegerField(default=0)),
                ("companies", models.ManyToManyField(to="simulation.company")),
                (
                    "cryptocurrencies",
                    models.ManyToManyField(to="simulation.cryptocurrency"),
                ),
                ("custom_stats", models.ManyToManyField(to="simulation.customstat")),
                ("events", models.ManyToManyField(to="simulation.event")),
                (
                    "simulation_settings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.simulationsettings",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Scenarios",
            },
        ),
        migrations.CreateModel(
            name="SimulationData",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("price_changes", models.JSONField(default=list)),
                ("transactions", models.JSONField(default=list)),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.scenario",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Simulation Data",
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("price", models.FloatField(default=0.0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("partial_share", models.FloatField(default=0.0)),
                ("complete_share", models.IntegerField(default=0)),
                ("open_price", models.FloatField(default=0.0)),
                ("high_price", models.FloatField(default=0.0)),
                ("low_price", models.FloatField(default=0.0)),
                ("close_price", models.FloatField(default=0.0)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.company",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Stocks",
            },
        ),
        migrations.AddField(
            model_name="scenario",
            name="stocks",
            field=models.ManyToManyField(to="simulation.stock"),
        ),
        migrations.AddField(
            model_name="scenario",
            name="teams",
            field=models.ManyToManyField(to="simulation.team"),
        ),
        migrations.CreateModel(
            name="Portfolio",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "cryptocurrencies",
                    models.ManyToManyField(to="simulation.cryptocurrency"),
                ),
                ("stocks", models.ManyToManyField(to="simulation.stock")),
                (
                    "team",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolio",
                        to="simulation.team",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Portfolios",
            },
        ),
        migrations.CreateModel(
            name="TransactionHistory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("asset", models.CharField(default="", max_length=100)),
                ("transaction_type", models.CharField(default="", max_length=100)),
                ("amount", models.FloatField(default=0.0)),
                ("price", models.FloatField(default=0.0)),
                ("date", models.DateTimeField(auto_now=True)),
                (
                    "portfolio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.portfolio",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Transaction Histories",
            },
        ),
        migrations.AddField(
            model_name="scenario",
            name="triggers",
            field=models.ManyToManyField(to="simulation.trigger"),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("balance", models.FloatField(default=10000)),
                ("borrowed_money", models.FloatField(default=0.0)),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_profiles",
                        to="simulation.team",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User Profiles",
            },
        ),
        migrations.AddField(
            model_name="team",
            name="members",
            field=models.ManyToManyField(
                related_name="teams", to="simulation.userprofile"
            ),
        ),
        migrations.AddField(
            model_name="scenario",
            name="users",
            field=models.ManyToManyField(to="simulation.userprofile"),
        ),
        migrations.AddField(
            model_name="portfolio",
            name="owner",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="portfolio",
                to="simulation.userprofile",
            ),
        ),
    ]
